#!/usr/bin/env bash

set -eu

api=https://cloud.mongodb.com/api/atlas/v1.0
comment=k8s-nodes

[[ -z $ATLAS_GROUP_ID ]] &&
    echo "Need ATLAS_GROUP_ID" &&
    exit 1

[[ -z $ATLAS_USERNAME ]] &&
    echo "Need ATLAS_USERNAME" &&
    exit 1

[[ -z $ATLAS_API_KEY ]] &&
    echo "Need ATLAS_API_KEY" &&
    exit 1

request () {
    curl \
        --fail \
        --silent \
        --show-error \
        --user "$ATLAS_USERNAME:$ATLAS_API_KEY" \
        --digest \
        --header "Accept: application/json" \
        --header "Content-Type: application/json" \
        "$@"
}

existing_cidrs () {
    request \
        --request GET \
        "$api/groups/$ATLAS_GROUP_ID/whitelist" \
        | jq \
        --compact-output \
        --arg comment $comment \
        '[.results[] | select(.comment == $comment) | .cidrBlock]'
}

current_node_ips () {
    kubectl \
        get nodes \
        --output jsonpath='{.items[*].status.addresses[?(@.type=="ExternalIP")].address}'
}

whitelist_excluding_ips () {
    ips_to_exclude=$1

    excludeFilters=""
    for ip in $ips_to_exclude
    do
        excludeFilters+="| select(.ipAddress != \"$ip\") "
    done

    request \
        --request GET \
        "$api/groups/$ATLAS_GROUP_ID/whitelist" \
        | jq \
        --raw-output \
        --arg comment $comment \
        ".results[] | select(.comment == \$comment) $excludeFilters | .ipAddress"
}

map_ips_to_json () {
    echo "$@" \
        | jq \
        --raw-input \
        --arg comment $comment \
        'split(" ") | map({ipAddress: ., comment: $comment})'
}

node_ips=$(current_node_ips)
cidrs_before=$(existing_cidrs)

atlas_response=$(
request \
    --request POST \
    "$api/groups/$ATLAS_GROUP_ID/whitelist" \
    --data "$(map_ips_to_json $node_ips)"
)

cidrs_after=$(existing_cidrs)

deletable_ips=$(whitelist_excluding_ips "$node_ips")
for ip in $deletable_ips
do
    request \
        --request DELETE \
        "$api/groups/$ATLAS_GROUP_ID/whitelist/$ip" \
        > /dev/null
done

jq \
    --null-input \
    --argjson atlas_response "$atlas_response" \
    --arg timestamp "$(date +%s)" \
    --arg node_ips "$node_ips" \
    --argjson cidrs_before "$cidrs_before" \
    --argjson cidrs_after "$cidrs_after" \
    --arg deleted_ips "$deletable_ips" \
    '{
        nodeIPs: $node_ips,
        cidrsBefore: $cidrs_before,
        cidrsAfter: $cidrs_after,
        deletedIPs: $deleted_ips
     }
     | .nodeIPs |= split(" ")
     | .deletedIPs |= split("\n")
     | . += { atlasResponse: $atlas_response,
              timestamp: $timestamp }
     '
